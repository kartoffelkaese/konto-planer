// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  passwordHash String
  salaryDay    Int
  accountName  String?       @default("Mein Konto")
  createdAt    DateTime      @default(now())
  transactions Transaction[]
  merchants    Merchant[]

  @@map("users")
}

model Transaction {
  id                  String        @id @default(uuid())
  userId              String
  description         String?
  merchant            String
  merchantId          String?
  merchantRef         Merchant?     @relation(fields: [merchantId], references: [id])
  amount              Decimal       @db.Decimal(10, 2)
  date                DateTime
  isConfirmed         Boolean       @default(false)
  isRecurring         Boolean       @default(false)
  recurringInterval   String?
  lastConfirmedDate   DateTime?
  version             Int           @default(1)
  parentTransactionId String?
  parentTransaction   Transaction?  @relation("RecurringInstances", fields: [parentTransactionId], references: [id])
  childTransactions   Transaction[] @relation("RecurringInstances")
  createdAt           DateTime      @default(now())
  user                User          @relation(fields: [userId], references: [id])

  @@map("transactions")
}

model Merchant {
  id           String        @id @default(uuid())
  userId       String
  name         String
  description  String?
  category     String?
  createdAt    DateTime      @default(now())
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("merchants")
  @@unique([userId, name])
}
